#!/usr/bin/env ruby

# Run that script in your apps root. Important: rubocop and colorize gems have to be installed!

require 'bundler'
require 'rubocop'
require 'colorize'

APP_ROOT = Bundler.root.to_s

require_relative 'source_class'
require_relative 'source_file'
require_relative 'test_file'


# Ensure there are paths to search for
paths = ARGV
paths = [APP_ROOT + '/lib'] if paths.empty?


# Find files
target_finder = RuboCop::TargetFinder.new(RuboCop::ConfigStore.new)
target_files = target_finder.find(paths)


# Map all found files to SourceFiles
source_files = target_files.map { |file| SourceFile.new(file) }

overall_covered = 0
overall_methods = 0

# Iterate over all found files and their classes
source_files.each do |file|
  file.classes.each do |cls|
    class_name = (cls.module_name.to_s + (cls.module_name.empty? ? '' : '::') + cls.name.to_s).light_blue
    coverage = "#{file.coverage}/#{cls.methods.size}"
    covered = file.coverage == cls.methods.size
    puts "#{covered ? '[X]'.green : '[ ]'.red} Found class: #{class_name} with #{covered ? coverage.green : coverage.red} covered methods in #{file.file_name.light_blue}".bold

    file.hints.each do |hint|
      puts "    - #{hint}"
    end

    overall_methods += cls.methods.size
    overall_covered += file.coverage

    puts
  end
end


puts
puts "Have found #{overall_methods.to_s.yellow} methods and #{overall_covered.to_s.yellow} are covered by tests. Thus there are #{(overall_methods - overall_covered).to_s.yellow} uncovered methods."
puts
